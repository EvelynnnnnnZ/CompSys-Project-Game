I created a command-line LC4 simulator program called trace that processes multiple .OBJ files, loading and simulating their machine code to mimic the functionality of PennSim’s assembly-level simulation (without the GUI). The program reads object files containing LC4 machine code, loads them into simulated memory, and initializes the system’s internal state—program counter, status registers, general registers, and control signals—to match the LC4 after a reset.

The trace program then runs the loaded instructions one at a time, tracking each LC4 cycle and writing a detailed trace output to a specified text file. This trace file records the state of the simulator for each cycle, providing insight into the program’s execution flow and state changes. Given the complexity of emulating LC4’s memory, registers, and control processes, this assignment is challenging and crucial for understanding LC4's low-level operations and state management.
